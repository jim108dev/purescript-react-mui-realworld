{- This module was autogenerated. Please don't edit. -}
module MUI.Core.FormHelperText where

import Effect (Effect) as Effect
import MUI.Core (JSS, class Nub')
import MUI.Core.Styles (Theme, withStyles) as MUI.Core.Styles
import MUI.React.Basic (element) as MUI.React.Basic
import Prelude
import Prim.Row (class Union) as Prim.Row
import React.Basic (JSX, ReactComponent, element)
import React.Basic.DOM (Props_div) as React.Basic.DOM
import Unsafe.Coerce (unsafeCoerce)
import Unsafe.Reference (unsafeRefEq)

foreign import data AriaHaspopup :: Type

ariaHaspopup ::
  { dialog :: AriaHaspopup
  , "false" :: AriaHaspopup
  , grid :: AriaHaspopup
  , listbox :: AriaHaspopup
  , menu :: AriaHaspopup
  , tree :: AriaHaspopup
  , "true" :: AriaHaspopup
  }
ariaHaspopup = { dialog: unsafeCoerce "dialog", "false": unsafeCoerce "false", grid: unsafeCoerce "grid", listbox: unsafeCoerce "listbox", menu: unsafeCoerce "menu", tree: unsafeCoerce "tree", "true": unsafeCoerce "true" }

foreign import data Margin :: Type

margin ::
  { dense :: Margin
  }
margin = { dense: unsafeCoerce "dense" }

foreign import data Variant :: Type

variant ::
  { filled :: Variant
  , outlined :: Variant
  , standard :: Variant
  }
variant = { filled: unsafeCoerce "filled", outlined: unsafeCoerce "outlined", standard: unsafeCoerce "standard" }

instance eqVariant :: Eq Variant where
  eq = unsafeRefEq

instance eqMargin :: Eq Margin where
  eq = unsafeRefEq

instance eqAriaHaspopup :: Eq AriaHaspopup where
  eq = unsafeRefEq

type FormHelperTextClassesGenericRow a
  = ( contained :: a
    , disabled :: a
    , error :: a
    , filled :: a
    , focused :: a
    , marginDense :: a
    , required :: a
    , root :: a
    )

type FormHelperTextClassesKey
  = FormHelperTextClassesGenericRow String

type FormHelperTextClassesJSS
  = FormHelperTextClassesGenericRow JSS

type FormHelperTextOptPropsRow (r :: # Type)
  = ( "aria-controls" :: String
    , "aria-haspopup" :: AriaHaspopup
    , children :: Array JSX
    , classes :: { | FormHelperTextClassesKey }
    , disabled :: Boolean
    , error :: Boolean
    , filled :: Boolean
    , focused :: Boolean
    , margin :: Margin
    , required :: Boolean
    , variant :: Variant
    | r
    )

type FormHelperTextReqPropsRow (r :: # Type)
  = r

type FormHelperTextPropsRow (r :: # Type)
  = FormHelperTextOptPropsRow (FormHelperTextReqPropsRow r)

foreign import _UnsafeFormHelperText :: forall componentProps. ReactComponent { | FormHelperTextPropsRow componentProps }

_FormHelperText ::
  forall given optionalGiven optionalMissing props required.
  Nub' (FormHelperTextReqPropsRow ()) required =>
  Prim.Row.Union required optionalGiven given =>
  Nub' (FormHelperTextPropsRow React.Basic.DOM.Props_div) props =>
  Prim.Row.Union given optionalMissing props =>
  ReactComponent { | given }
_FormHelperText = unsafeCoerce _UnsafeFormHelperText

formHelperText ::
  forall given optionalGiven optionalMissing props required.
  Nub' (FormHelperTextReqPropsRow ()) required =>
  Prim.Row.Union required optionalGiven given =>
  Nub' (FormHelperTextPropsRow React.Basic.DOM.Props_div) props =>
  Prim.Row.Union given optionalMissing props =>
  { | given } -> JSX
formHelperText ps = element _FormHelperText ps

formHelperText' :: FormHelperTextProps -> JSX
formHelperText' = MUI.React.Basic.element _FormHelperText'

_FormHelperText' :: ReactComponent FormHelperTextProps
_FormHelperText' = unsafeCoerce _UnsafeFormHelperText

formHelperTextWithStyles ::
  forall jss_ jss.
  Prim.Row.Union jss jss_ FormHelperTextClassesJSS =>
  (MUI.Core.Styles.Theme -> { | jss }) -> Effect.Effect (FormHelperTextProps -> JSX)
formHelperTextWithStyles style = render
  where
  withStyles' :: ReactComponent FormHelperTextProps -> Effect.Effect (ReactComponent FormHelperTextProps)
  withStyles' = MUI.Core.Styles.withStyles (unsafeCoerce style)

  styledComponent = withStyles' _FormHelperText'

  render = map MUI.React.Basic.element styledComponent

foreign import data FormHelperTextProps :: Type

props ::
  forall given optionalGiven optionalMissing props required.
  Nub' (FormHelperTextReqPropsRow ()) required =>
  Prim.Row.Union required optionalGiven given =>
  Nub' (FormHelperTextPropsRow React.Basic.DOM.Props_div) props =>
  Prim.Row.Union given optionalMissing props =>
  { | given } -> FormHelperTextProps
props = unsafeCoerce
