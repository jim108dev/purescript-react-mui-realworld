{- This module was autogenerated. Please don't edit. -}
module MUI.Core.MenuItem where

import Effect (Effect) as Effect
import Foreign (Foreign) as Foreign
import MUI.Core (JSS, class Nub')
import MUI.Core.ListItem (ListItemPropsRow, ListItemReqPropsRow) as MUI.Core.ListItem
import MUI.Core.Styles (Theme, withStyles) as MUI.Core.Styles
import MUI.React.Basic (element) as MUI.React.Basic
import Prelude
import Prim.Row (class Union) as Prim.Row
import React.Basic (JSX, ReactComponent, element)
import React.Basic.DOM (Props_li) as React.Basic.DOM
import Unsafe.Coerce (unsafeCoerce)
import Unsafe.Reference (unsafeRefEq)

foreign import data AriaHaspopup :: Type

ariaHaspopup ::
  { dialog :: AriaHaspopup
  , "false" :: AriaHaspopup
  , grid :: AriaHaspopup
  , listbox :: AriaHaspopup
  , menu :: AriaHaspopup
  , tree :: AriaHaspopup
  , "true" :: AriaHaspopup
  }
ariaHaspopup = { dialog: unsafeCoerce "dialog", "false": unsafeCoerce "false", grid: unsafeCoerce "grid", listbox: unsafeCoerce "listbox", menu: unsafeCoerce "menu", tree: unsafeCoerce "tree", "true": unsafeCoerce "true" }

instance eqAriaHaspopup :: Eq AriaHaspopup where
  eq = unsafeRefEq

type MenuItemClassesGenericRow a
  = ( dense :: a
    , gutters :: a
    , root :: a
    , selected :: a
    )

type MenuItemClassesKey
  = MenuItemClassesGenericRow String

type MenuItemClassesJSS
  = MenuItemClassesGenericRow JSS

type MenuItemOptPropsRow (r :: # Type)
  = ( "ListItemClasses" :: Foreign.Foreign
    , "aria-controls" :: String
    , "aria-haspopup" :: AriaHaspopup
    , children :: Array JSX
    , classes :: { | MenuItemClassesKey }
    , component :: Foreign.Foreign
    , dense :: Boolean
    , disableGutters :: Boolean
    , disabled :: Boolean
    , ref :: Foreign.Foreign
    | r
    )

type MenuItemReqPropsRow (r :: # Type)
  = r

type MenuItemPropsRow (r :: # Type)
  = MenuItemOptPropsRow (MenuItemReqPropsRow r)

foreign import _UnsafeMenuItem :: forall componentProps. ReactComponent { | MenuItemPropsRow componentProps }

_MenuItem ::
  forall given optionalGiven optionalMissing props required.
  Nub' (MenuItemReqPropsRow (MUI.Core.ListItem.ListItemReqPropsRow ())) required =>
  Prim.Row.Union required optionalGiven given =>
  Nub' (MenuItemPropsRow (MUI.Core.ListItem.ListItemPropsRow React.Basic.DOM.Props_li)) props =>
  Prim.Row.Union given optionalMissing props =>
  ReactComponent { | given }
_MenuItem = unsafeCoerce _UnsafeMenuItem

menuItem ::
  forall given optionalGiven optionalMissing props required.
  Nub' (MenuItemReqPropsRow (MUI.Core.ListItem.ListItemReqPropsRow ())) required =>
  Prim.Row.Union required optionalGiven given =>
  Nub' (MenuItemPropsRow (MUI.Core.ListItem.ListItemPropsRow React.Basic.DOM.Props_li)) props =>
  Prim.Row.Union given optionalMissing props =>
  { | given } -> JSX
menuItem ps = element _MenuItem ps

menuItem' :: MenuItemProps -> JSX
menuItem' = MUI.React.Basic.element _MenuItem'

_MenuItem' :: ReactComponent MenuItemProps
_MenuItem' = unsafeCoerce _UnsafeMenuItem

menuItemWithStyles ::
  forall jss_ jss.
  Prim.Row.Union jss jss_ MenuItemClassesJSS =>
  (MUI.Core.Styles.Theme -> { | jss }) -> Effect.Effect (MenuItemProps -> JSX)
menuItemWithStyles style = render
  where
  withStyles' :: ReactComponent MenuItemProps -> Effect.Effect (ReactComponent MenuItemProps)
  withStyles' = MUI.Core.Styles.withStyles (unsafeCoerce style)

  styledComponent = withStyles' _MenuItem'

  render = map MUI.React.Basic.element styledComponent

foreign import data MenuItemProps :: Type

props ::
  forall given optionalGiven optionalMissing props required.
  Nub' (MenuItemReqPropsRow (MUI.Core.ListItem.ListItemReqPropsRow ())) required =>
  Prim.Row.Union required optionalGiven given =>
  Nub' (MenuItemPropsRow (MUI.Core.ListItem.ListItemPropsRow React.Basic.DOM.Props_li)) props =>
  Prim.Row.Union given optionalMissing props =>
  { | given } -> MenuItemProps
props = unsafeCoerce
