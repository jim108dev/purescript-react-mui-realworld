{- This module was autogenerated. Please don't edit. -}
module MUI.Core.ListItemIcon where

import Effect (Effect) as Effect
import MUI.Core (JSS, class Nub')
import MUI.Core.Styles (Theme, withStyles) as MUI.Core.Styles
import MUI.React.Basic (element) as MUI.React.Basic
import Prelude
import Prim.Row (class Union) as Prim.Row
import React.Basic (JSX, ReactComponent, element)
import React.Basic.DOM (Props_div) as React.Basic.DOM
import Unsafe.Coerce (unsafeCoerce)
import Unsafe.Reference (unsafeRefEq)

foreign import data AriaHaspopup :: Type

ariaHaspopup ::
  { dialog :: AriaHaspopup
  , "false" :: AriaHaspopup
  , grid :: AriaHaspopup
  , listbox :: AriaHaspopup
  , menu :: AriaHaspopup
  , tree :: AriaHaspopup
  , "true" :: AriaHaspopup
  }
ariaHaspopup = { dialog: unsafeCoerce "dialog", "false": unsafeCoerce "false", grid: unsafeCoerce "grid", listbox: unsafeCoerce "listbox", menu: unsafeCoerce "menu", tree: unsafeCoerce "tree", "true": unsafeCoerce "true" }

instance eqAriaHaspopup :: Eq AriaHaspopup where
  eq = unsafeRefEq

type ListItemIconClassesGenericRow a
  = ( root :: a
    )

type ListItemIconClassesKey
  = ListItemIconClassesGenericRow String

type ListItemIconClassesJSS
  = ListItemIconClassesGenericRow JSS

type ListItemIconOptPropsRow (r :: # Type)
  = ( "aria-controls" :: String
    , "aria-haspopup" :: AriaHaspopup
    , children :: Array JSX
    , classes :: { | ListItemIconClassesKey }
    | r
    )

type ListItemIconReqPropsRow (r :: # Type)
  = r

type ListItemIconPropsRow (r :: # Type)
  = ListItemIconOptPropsRow (ListItemIconReqPropsRow r)

foreign import _UnsafeListItemIcon :: forall componentProps. ReactComponent { | ListItemIconPropsRow componentProps }

_ListItemIcon ::
  forall given optionalGiven optionalMissing props required.
  Nub' (ListItemIconReqPropsRow ()) required =>
  Prim.Row.Union required optionalGiven given =>
  Nub' (ListItemIconPropsRow React.Basic.DOM.Props_div) props =>
  Prim.Row.Union given optionalMissing props =>
  ReactComponent { | given }
_ListItemIcon = unsafeCoerce _UnsafeListItemIcon

listItemIcon ::
  forall given optionalGiven optionalMissing props required.
  Nub' (ListItemIconReqPropsRow ()) required =>
  Prim.Row.Union required optionalGiven given =>
  Nub' (ListItemIconPropsRow React.Basic.DOM.Props_div) props =>
  Prim.Row.Union given optionalMissing props =>
  { | given } -> JSX
listItemIcon ps = element _ListItemIcon ps

listItemIcon' :: ListItemIconProps -> JSX
listItemIcon' = MUI.React.Basic.element _ListItemIcon'

_ListItemIcon' :: ReactComponent ListItemIconProps
_ListItemIcon' = unsafeCoerce _UnsafeListItemIcon

listItemIconWithStyles ::
  forall jss_ jss.
  Prim.Row.Union jss jss_ ListItemIconClassesJSS =>
  (MUI.Core.Styles.Theme -> { | jss }) -> Effect.Effect (ListItemIconProps -> JSX)
listItemIconWithStyles style = render
  where
  withStyles' :: ReactComponent ListItemIconProps -> Effect.Effect (ReactComponent ListItemIconProps)
  withStyles' = MUI.Core.Styles.withStyles (unsafeCoerce style)

  styledComponent = withStyles' _ListItemIcon'

  render = map MUI.React.Basic.element styledComponent

foreign import data ListItemIconProps :: Type

props ::
  forall given optionalGiven optionalMissing props required.
  Nub' (ListItemIconReqPropsRow ()) required =>
  Prim.Row.Union required optionalGiven given =>
  Nub' (ListItemIconPropsRow React.Basic.DOM.Props_div) props =>
  Prim.Row.Union given optionalMissing props =>
  { | given } -> ListItemIconProps
props = unsafeCoerce
