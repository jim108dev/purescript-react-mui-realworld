{- This module was autogenerated. Please don't edit. -}
module MUI.Core.FormLabel where

import Effect (Effect) as Effect
import MUI.Core (JSS, class Nub')
import MUI.Core.Styles (Theme, withStyles) as MUI.Core.Styles
import MUI.React.Basic (element) as MUI.React.Basic
import Prelude
import Prim.Row (class Union) as Prim.Row
import React.Basic (JSX, ReactComponent, element)
import React.Basic.DOM (Props_label) as React.Basic.DOM
import Unsafe.Coerce (unsafeCoerce)
import Unsafe.Reference (unsafeRefEq)

foreign import data AriaHaspopup :: Type

ariaHaspopup ::
  { dialog :: AriaHaspopup
  , "false" :: AriaHaspopup
  , grid :: AriaHaspopup
  , listbox :: AriaHaspopup
  , menu :: AriaHaspopup
  , tree :: AriaHaspopup
  , "true" :: AriaHaspopup
  }
ariaHaspopup = { dialog: unsafeCoerce "dialog", "false": unsafeCoerce "false", grid: unsafeCoerce "grid", listbox: unsafeCoerce "listbox", menu: unsafeCoerce "menu", tree: unsafeCoerce "tree", "true": unsafeCoerce "true" }

foreign import data Color :: Type

color ::
  { primary :: Color
  , secondary :: Color
  }
color = { primary: unsafeCoerce "primary", secondary: unsafeCoerce "secondary" }

instance eqColor :: Eq Color where
  eq = unsafeRefEq

instance eqAriaHaspopup :: Eq AriaHaspopup where
  eq = unsafeRefEq

type FormLabelClassesGenericRow a
  = ( asterisk :: a
    , colorSecondary :: a
    , disabled :: a
    , error :: a
    , filled :: a
    , focused :: a
    , required :: a
    , root :: a
    )

type FormLabelClassesKey
  = FormLabelClassesGenericRow String

type FormLabelClassesJSS
  = FormLabelClassesGenericRow JSS

type FormLabelOptPropsRow (r :: # Type)
  = ( "aria-controls" :: String
    , "aria-haspopup" :: AriaHaspopup
    , children :: Array JSX
    , classes :: { | FormLabelClassesKey }
    , color :: Color
    , disabled :: Boolean
    , error :: Boolean
    , filled :: Boolean
    , focused :: Boolean
    , required :: Boolean
    | r
    )

type FormLabelReqPropsRow (r :: # Type)
  = r

type FormLabelPropsRow (r :: # Type)
  = FormLabelOptPropsRow (FormLabelReqPropsRow r)

foreign import _UnsafeFormLabel :: forall componentProps. ReactComponent { | FormLabelPropsRow componentProps }

_FormLabel ::
  forall given optionalGiven optionalMissing props required.
  Nub' (FormLabelReqPropsRow ()) required =>
  Prim.Row.Union required optionalGiven given =>
  Nub' (FormLabelPropsRow React.Basic.DOM.Props_label) props =>
  Prim.Row.Union given optionalMissing props =>
  ReactComponent { | given }
_FormLabel = unsafeCoerce _UnsafeFormLabel

formLabel ::
  forall given optionalGiven optionalMissing props required.
  Nub' (FormLabelReqPropsRow ()) required =>
  Prim.Row.Union required optionalGiven given =>
  Nub' (FormLabelPropsRow React.Basic.DOM.Props_label) props =>
  Prim.Row.Union given optionalMissing props =>
  { | given } -> JSX
formLabel ps = element _FormLabel ps

formLabel' :: FormLabelProps -> JSX
formLabel' = MUI.React.Basic.element _FormLabel'

_FormLabel' :: ReactComponent FormLabelProps
_FormLabel' = unsafeCoerce _UnsafeFormLabel

formLabelWithStyles ::
  forall jss_ jss.
  Prim.Row.Union jss jss_ FormLabelClassesJSS =>
  (MUI.Core.Styles.Theme -> { | jss }) -> Effect.Effect (FormLabelProps -> JSX)
formLabelWithStyles style = render
  where
  withStyles' :: ReactComponent FormLabelProps -> Effect.Effect (ReactComponent FormLabelProps)
  withStyles' = MUI.Core.Styles.withStyles (unsafeCoerce style)

  styledComponent = withStyles' _FormLabel'

  render = map MUI.React.Basic.element styledComponent

foreign import data FormLabelProps :: Type

props ::
  forall given optionalGiven optionalMissing props required.
  Nub' (FormLabelReqPropsRow ()) required =>
  Prim.Row.Union required optionalGiven given =>
  Nub' (FormLabelPropsRow React.Basic.DOM.Props_label) props =>
  Prim.Row.Union given optionalMissing props =>
  { | given } -> FormLabelProps
props = unsafeCoerce
