{- This module was autogenerated. Please don't edit. -}
module MUI.Core.Collapse where

import Effect (Effect) as Effect
import Foreign (Foreign) as Foreign
import MUI.Core (JSS, class Nub')
import MUI.Core.Styles (Theme, withStyles) as MUI.Core.Styles
import MUI.React.Basic (element) as MUI.React.Basic
import Prelude
import Prim.Row (class Union) as Prim.Row
import React.Basic (JSX, ReactComponent, element)
import React.Basic.DOM (Props_div) as React.Basic.DOM
import Unsafe.Coerce (unsafeCoerce)

foreign import data CollapsedHeight :: Type

collapsedHeight ::
  { number :: Number -> CollapsedHeight
  , string :: String -> CollapsedHeight
  }
collapsedHeight = { number: unsafeCoerce, string: unsafeCoerce }

foreign import data Timeout :: Type

timeout ::
  { auto :: Timeout
  , number :: Number -> Timeout
  , record :: { appear :: Number, enter :: Number, exit :: Number } -> Timeout
  , record1 :: { appear :: Number, enter :: Number, exit :: Number } -> Timeout
  }
timeout = { auto: unsafeCoerce "auto", number: unsafeCoerce, record: unsafeCoerce, record1: unsafeCoerce }

type CollapseClassesGenericRow a
  = ( container :: a
    , entered :: a
    , hidden :: a
    , wrapper :: a
    , wrapperInner :: a
    )

type CollapseClassesKey
  = CollapseClassesGenericRow String

type CollapseClassesJSS
  = CollapseClassesGenericRow JSS

type CollapseOptPropsRow (r :: # Type)
  = ( children :: Array JSX
    , classes :: { | CollapseClassesKey }
    , collapsedHeight :: CollapsedHeight
    , component :: String
    , disableStrictModeCompat :: Boolean
    , "in" :: Boolean
    , ref :: Foreign.Foreign
    , timeout :: Timeout
    | r
    )

type CollapseReqPropsRow (r :: # Type)
  = r

type CollapsePropsRow (r :: # Type)
  = CollapseOptPropsRow (CollapseReqPropsRow r)

foreign import _UnsafeCollapse :: forall componentProps. ReactComponent { | CollapsePropsRow componentProps }

_Collapse ::
  forall given optionalGiven optionalMissing props required.
  Nub' (CollapseReqPropsRow ()) required =>
  Prim.Row.Union required optionalGiven given =>
  Nub' (CollapsePropsRow React.Basic.DOM.Props_div) props =>
  Prim.Row.Union given optionalMissing props =>
  ReactComponent { | given }
_Collapse = unsafeCoerce _UnsafeCollapse

collapse ::
  forall given optionalGiven optionalMissing props required.
  Nub' (CollapseReqPropsRow ()) required =>
  Prim.Row.Union required optionalGiven given =>
  Nub' (CollapsePropsRow React.Basic.DOM.Props_div) props =>
  Prim.Row.Union given optionalMissing props =>
  { | given } -> JSX
collapse ps = element _Collapse ps

_Collapse' :: ReactComponent CollapseProps
_Collapse' = unsafeCoerce _UnsafeCollapse

collapseWithStyles ::
  forall jss_ jss.
  Prim.Row.Union jss jss_ CollapseClassesJSS =>
  (MUI.Core.Styles.Theme -> { | jss }) -> Effect.Effect (CollapseProps -> JSX)
collapseWithStyles style = render
  where
  withStyles' :: ReactComponent CollapseProps -> Effect.Effect (ReactComponent CollapseProps)
  withStyles' = MUI.Core.Styles.withStyles (unsafeCoerce style)

  styledComponent = withStyles' _Collapse'

  render = map MUI.React.Basic.element styledComponent

foreign import data CollapseProps :: Type

props ::
  forall given optionalGiven optionalMissing props required.
  Nub' (CollapseReqPropsRow ()) required =>
  Prim.Row.Union required optionalGiven given =>
  Nub' (CollapsePropsRow React.Basic.DOM.Props_div) props =>
  Prim.Row.Union given optionalMissing props =>
  { | given } -> CollapseProps
props = unsafeCoerce
