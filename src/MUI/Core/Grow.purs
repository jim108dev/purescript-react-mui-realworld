{- This module was autogenerated. Please don't edit. -}
module MUI.Core.Grow where

import MUI.Core (class Nub')
import Prim.Row (class Union) as Prim.Row
import React.Basic (JSX, ReactComponent, element)
import React.Basic.DOM (Props_div) as React.Basic.DOM
import Unsafe.Coerce (unsafeCoerce)

foreign import data Timeout :: Type

timeout ::
  { auto :: Timeout
  , number :: Number -> Timeout
  , record :: { appear :: Number, enter :: Number, exit :: Number } -> Timeout
  , record1 :: { appear :: Number, enter :: Number, exit :: Number } -> Timeout
  }
timeout = { auto: unsafeCoerce "auto", number: unsafeCoerce, record: unsafeCoerce, record1: unsafeCoerce }

type GrowOptPropsRow (r :: # Type)
  = ( "in" :: Boolean
    , timeout :: Timeout
    | r
    )

type GrowReqPropsRow (r :: # Type)
  = r

type GrowPropsRow (r :: # Type)
  = GrowOptPropsRow (GrowReqPropsRow r)

foreign import _UnsafeGrow :: forall componentProps. ReactComponent { | GrowPropsRow componentProps }

_Grow ::
  forall given optionalGiven optionalMissing props required.
  Nub' (GrowReqPropsRow ()) required =>
  Prim.Row.Union required optionalGiven given =>
  Nub' (GrowPropsRow React.Basic.DOM.Props_div) props =>
  Prim.Row.Union given optionalMissing props =>
  ReactComponent { | given }
_Grow = unsafeCoerce _UnsafeGrow

grow ::
  forall given optionalGiven optionalMissing props required.
  Nub' (GrowReqPropsRow ()) required =>
  Prim.Row.Union required optionalGiven given =>
  Nub' (GrowPropsRow React.Basic.DOM.Props_div) props =>
  Prim.Row.Union given optionalMissing props =>
  { | given } -> JSX
grow ps = element _Grow ps

_Grow' :: ReactComponent GrowProps
_Grow' = unsafeCoerce _UnsafeGrow

foreign import data GrowProps :: Type

props ::
  forall given optionalGiven optionalMissing props required.
  Nub' (GrowReqPropsRow ()) required =>
  Prim.Row.Union required optionalGiven given =>
  Nub' (GrowPropsRow React.Basic.DOM.Props_div) props =>
  Prim.Row.Union given optionalMissing props =>
  { | given } -> GrowProps
props = unsafeCoerce
